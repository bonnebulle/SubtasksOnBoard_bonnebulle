
  // VBULLE SUBTASK on clic +
  $(document).on("click", ".dropdown-submenu-open_alt li a", function (e) {
      e.preventDefault();
      let url=$(this).attr("href")
      KB.modal.open(url, "medium", !0);
  });


  /// SHOW/HIDE SUBTASK (checkboxs)
  $(".table-suboncard .toggle_sub_desc_a").each(function () {
    /// AUTO RUN RESTORE PREVIOUS STATE
    let $this=$(this)
    var $desc=$(this).parent().parent().next(".sub_desc")
    let $checkbox= $desc.find(".toggle_sub_desc_checkbox")
    let task_id = $(this).attr("data-task_id")
    let subtask_id = $(this).attr("data-subtask_id")
    // alert(task_id)
    // alert(subtask_id)
    let saved = localStorage.getItem("sub_desc_checkbox_"+ task_id+"_"+subtask_id);
    if (saved !== null) {
      if (saved=="true") {
        $($checkbox).prop("checked", true);
        $desc.removeClass("active")
        $(this).removeClass("active")

      } else {
        $($checkbox).prop("checked", false);
        $desc.addClass("active")
        $(this).addClass("active")

      }
        // alert("saved "+saved)
    }
    $desc.removeClass("loading")

    /// ONCLICK
    $(this).on("click", function(e) {
      e.preventDefault();
      // alert("eeee")
      $this=$(this)
      let $desc=$this.parent().parent().next(".sub_desc")
      let $checkbox= $desc.find(".toggle_sub_desc_checkbox")
      
      $checkbox.prop("checked", !$checkbox.prop("checked"));
      
      setTimeout(function () {
        if ($checkbox.prop("checked")==true) {
          var checkis="true"
          $desc.removeClass("active")
          $($this).removeClass("active")
        } else {
          var checkis="false"
          $desc.addClass("active")
          $($this).addClass("active")

        }
        localStorage.setItem("sub_desc_checkbox_"+task_id+"_"+subtask_id, checkis);
      },100);
  
    });
  });

  // SUBTASK -> TEXTAREA -> PHP MAJ DUE_DESCRIPTION
  $('.sub_desc').on('click', function(e) {
      e.preventDefault(); // 1. Empêche le comportement par défaut

      // 2. Transforme le contenu en textarea
      var $this = $(this);
      var $wrap_desc = $(this).find(".wrap_desc");
      var $button = $('<button class="submit_sub_desc_edit" type="submit">Valider</button>');
      $wrap_desc.after($button);

        $(".submit_sub_desc_edit").on('click', function(e) {
          e.preventDefault();
          e.stopPropagation();
      
          // Récupérer les éléments nécessaires
          var $subDesc = $(this).closest('.sub_desc');
          var subtaskId = $subDesc.data('subid');
          var taskId = $subDesc.data('taskid');
          var newText = $subDesc.find('textarea[name="text"]').val();
      
          // Optionnel : CSRF token si besoin
          var csrf_token = $subDesc.find('input[name="csrf_token"]').val();
      
          $.ajax({
              url: "/assets/php/change_subdescription.php",
              type: "POST",
              data: {
                  task_id: taskId,
                  subtask_id: subtaskId,
                  text: newText
                  // csrf_token: csrf_token // si tu utilises le CSRF
              },
              success: function(response) {
                  // Affiche un message ou rafraîchis la page/zone
                  // alert("Description mise à jour !");
                  // Optionnel : rafraîchir la zone ou la page
                  location.reload();
              },
              error: function(xhr) {
                  alert("Erreur AJAX : " + xhr.statusText);
              }
          });

          
      });

      var currentText = $this.attr("data-text");
      var $textarea = $('<textarea name="text" tabindex="-1" placeholder="Écrivez votre texte en Markdown">').val(currentText);

      $wrap_desc.replaceWith($textarea);
      $textarea.focus();

      // 3. On empêche le comportement par défaut sur la textarea
      $($textarea).on('click', function(e) {
          e.preventDefault();
          e.stopPropagation();
      });

  });

});

// END FO FILE kanboard/assets/js/app.min.js
